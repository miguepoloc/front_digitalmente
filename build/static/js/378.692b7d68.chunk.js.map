{"version":3,"file":"static/js/378.692b7d68.chunk.js","mappings":"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","sources":["helpers/helper_Swal_Alerts.jsx","helpers/helper_imagen_ganso.jsx","pages/EmailRecover.jsx"],"sourcesContent":["/* eslint-disable camelcase */\r\n\r\n/*\r\nLa idea es que los alerts para que sea facil hacerle cambio a las imagenes.\r\n*/\r\n\r\nimport Swal from 'sweetalert2'\r\nimport { imgGanso } from './helper_imagen_ganso'\r\n\r\nconst colorTheme = '#4cbeff'\r\n\r\nwindow.Swal = Swal\r\n\r\n// Se utiliza en la parte 1 de la actividad 1 del módulo de david.\r\nexport const Warning_Alert = (\r\n    title = '',\r\n    htmlText = '',\r\n    btnConfirmcolor = colorTheme\r\n) => {\r\n    return Swal.fire({\r\n        title: title,\r\n        imageUrl: imgGanso.stop_250x200,\r\n        imageWidth: 250,\r\n        imageHeight: 200,\r\n        imageAlt: '¿Seguro que esa era la respuesta?',\r\n        html: htmlText,\r\n        showCloseButton: false,\r\n        showCancelButton: false,\r\n        showConfirmButton: true,\r\n        confirmButtonColor: btnConfirmcolor,\r\n        confirmButtonText: 'Aceptar',\r\n        focusConfirm: true\r\n    })\r\n}\r\n\r\nexport const Correct_Alert = (\r\n    title = '<strong>¡Correcto!</strong>',\r\n    htmlText = '',\r\n    btnConfirmcolor = colorTheme\r\n) => {\r\n    return Swal.fire({\r\n        title: title,\r\n        imageUrl: imgGanso.elegante_250x200,\r\n        imageWidth: 250,\r\n        imageHeight: 200,\r\n        imageAlt: '¡Correcto!',\r\n        html: htmlText,\r\n        showCloseButton: false,\r\n        showCancelButton: false,\r\n        showConfirmButton: true,\r\n        confirmButtonColor: btnConfirmcolor,\r\n        confirmButtonText: 'Aceptar',\r\n        focusConfirm: true\r\n    })\r\n}\r\n\r\nexport const ErrorAlert = (\r\n    title = '<strong>Uhm.. algo ha salido mal</strong>',\r\n    htmlText = '¿Porque no intentas otra vez?',\r\n    alt = 'Algo ha salido mal',\r\n    btnConfirmcolor = colorTheme\r\n) => {\r\n    return Swal.fire({\r\n        title: title,\r\n        imageUrl: imgGanso.stop_250x200, // Corregir xd\r\n        imageWidth: 250,\r\n        imageHeight: 200,\r\n        imageAlt: alt,\r\n        html: htmlText,\r\n        showCloseButton: false,\r\n        showCancelButton: false,\r\n        showConfirmButton: true,\r\n        confirmButtonColor: btnConfirmcolor,\r\n        confirmButtonText: 'Aceptar',\r\n        focusConfirm: true\r\n    })\r\n}\r\n\r\nexport const ErrorAlertSiNo = (\r\n    title = '<strong>Uhm.. algo ha salido mal</strong>',\r\n    htmlText = '¿Porque no intentas otra vez?',\r\n    alt = 'Algo ha salido mal',\r\n    btnConfirmcolor = colorTheme\r\n) => {\r\n    return Swal.fire({\r\n        title: title,\r\n        imageUrl: imgGanso.stop_250x200, // Corregir xd\r\n        imageWidth: 250,\r\n        imageHeight: 200,\r\n        imageAlt: alt,\r\n        html: htmlText,\r\n        showCloseButton: false,\r\n        showCancelButton: true,\r\n        showConfirmButton: true,\r\n        confirmButtonColor: btnConfirmcolor,\r\n        confirmButtonText: '¡Sí!',\r\n        cancelButtonText: '¡No!',\r\n        focusConfirm: true\r\n    })\r\n}\r\n\r\nexport const SendAlert = (\r\n    title = '<strong>Enviando...</strong>',\r\n    htmlText = '',\r\n    alt = 'Espera un momento',\r\n    btnConfirmcolor = colorTheme\r\n) => {\r\n    return Swal.fire({\r\n        title: title,\r\n        imageUrl: imgGanso.escribiendo_250x200, // Corregir xd\r\n        imageWidth: 250,\r\n        imageHeight: 200,\r\n        imageAlt: alt,\r\n        html: htmlText,\r\n        showCloseButton: false,\r\n        showCancelButton: false,\r\n        showConfirmButton: false\r\n    })\r\n}\r\n\r\nexport const SendOkAlert = (\r\n    title = '<strong>¡Se ha enviado con exito!</strong>',\r\n    htmlText = '',\r\n    alt = 'Espera un momento',\r\n    btnConfirmcolor = colorTheme\r\n) => {\r\n    return Swal.fire({\r\n        title: title,\r\n        imageUrl: imgGanso.feliz_250x200,\r\n        imageWidth: 250,\r\n        imageHeight: 200,\r\n        imageAlt: alt,\r\n        html: htmlText,\r\n        showCloseButton: false,\r\n        showCancelButton: false,\r\n        showConfirmButton: true,\r\n        confirmButtonColor: btnConfirmcolor,\r\n        confirmButtonText: 'Aceptar',\r\n        focusConfirm: true\r\n    })\r\n}\r\n\r\nexport const SendBadAlert = (\r\n    title = '<strong>¡Ups!</strong>',\r\n    htmlText = 'Parece que algo salió mal',\r\n    alt = 'Espera un momento',\r\n    btnConfirmcolor = colorTheme\r\n) => {\r\n    return Swal.fire({\r\n        title: title,\r\n        imageUrl: imgGanso.triste_250x200,\r\n        imageWidth: 250,\r\n        imageHeight: 200,\r\n        imageAlt: alt,\r\n        html: htmlText,\r\n        showCloseButton: false,\r\n        showCancelButton: false,\r\n        showConfirmButton: true,\r\n        confirmButtonColor: btnConfirmcolor,\r\n        confirmButtonText: 'Aceptar',\r\n        focusConfirm: true\r\n    })\r\n}\r\n\r\nexport const RetroalimentacionAlert = (\r\n    title = '<strong>¡Importante!</strong>',\r\n    htmlText = '',\r\n    btnConfirmcolor = colorTheme\r\n) => {\r\n    return Swal.fire({\r\n        title: title,\r\n        imageUrl: imgGanso.explicando,\r\n        imageWidth: 250,\r\n        // imageHeight: 200,\r\n        imageAlt: '¡Importante!',\r\n        html: htmlText,\r\n        showCloseButton: false,\r\n        showCancelButton: false,\r\n        showConfirmButton: true,\r\n        confirmButtonColor: btnConfirmcolor,\r\n        confirmButtonText: 'Aceptar',\r\n        focusConfirm: true\r\n    })\r\n}\r\n\r\nexport const gansoPensandoAlert = (\r\n    title = '<h5><strong>¡Importante!</strong></h5>',\r\n    htmlText = '',\r\n    btnConfirmcolor = colorTheme\r\n) => {\r\n    return Swal.fire({\r\n        title: title,\r\n        imageUrl: imgGanso.pensando,\r\n        imageWidth: 250,\r\n        imageHeight: 250,\r\n        imageAlt: '¡Importante!',\r\n        html: htmlText,\r\n        showCloseButton: false,\r\n        showCancelButton: false,\r\n        showConfirmButton: true,\r\n        confirmButtonColor: btnConfirmcolor,\r\n        confirmButtonText: 'Aceptar',\r\n        focusConfirm: true\r\n    })\r\n}\r\n","/* eslint-disable camelcase */\r\nimport ganso_lupa_celular from '../assets/img/ganso/ganso_lupa_celular.png'\r\nimport ganso_ejercicio from '../assets/img/ganso/ganso_ejercicio.png'\r\nimport ganso_pensando from '../assets/img/ganso/ganso_pensando.png'\r\nimport ganso_elegante from '../assets/img/ganso/ganso_elegante.png'\r\nimport ganso_leyendo from '../assets/img/ganso/ganso_leyendo.png'\r\nimport ganso_explicando from '../assets/img/ganso/ganso_explicando.png'\r\nimport ganso_celular from '../assets/img/ganso/ganso_celular.png'\r\nimport ganso_sorprendido from '../assets/img/ganso/ganso_sorprendido.png'\r\nimport ganso_meditando from '../assets/img/ganso/ganso_meditando.png'\r\nimport ganso_presentacion_personaje from '../assets/img/ganso/presentacion_personaje.png'\r\nimport ganso_durmiendo from '../assets/img/ganso/ganso_durmiendo.png'\r\nimport ganso_stop_250x200 from '../assets/img/ganso/250x200/ganso_stop.png'\r\nimport ganso_escribiendo_250x200 from '../assets/img/ganso/250x200/ganso_escribiendo.png'\r\nimport ganso_feliz_250x200 from '../assets/img/ganso/250x200/ganso_alegria.png'\r\nimport ganso_triste_250x200 from '../assets/img/ganso/250x200/ganso_tristeza.png'\r\nimport ganso_elegante_250x200 from '../assets/img/ganso/250x200/ganso_elegante.png'\r\n\r\n\r\nexport const imgGanso = {\r\n    lupa_celular: ganso_lupa_celular,\r\n    pensando: ganso_pensando,\r\n    elegante: ganso_elegante,\r\n    leyendo: ganso_leyendo,\r\n    explicando: ganso_explicando,\r\n    celular: ganso_celular,\r\n    meditando: ganso_meditando,\r\n    sorprendido: ganso_sorprendido,\r\n    durmiendo: ganso_durmiendo,\r\n    presentacion_personaje: ganso_presentacion_personaje,\r\n    elegante_250x200: ganso_elegante_250x200,\r\n    stop_250x200: ganso_stop_250x200,\r\n    escribiendo_250x200: ganso_escribiendo_250x200,\r\n    feliz_250x200: ganso_feliz_250x200,\r\n    triste_250x200: ganso_triste_250x200,\r\n    ganso_ejercicio: ganso_ejercicio,\r\n}\r\n","/* eslint-disable camelcase */\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Axios from 'axios'\r\nimport { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport '../assets/css/Login.scss'\r\nimport TextField from '@mui/material/TextField'\r\nimport Card from '@mui/material/Card'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Logo from '../assets/img/logo9.svg'\r\nimport Ola from '../assets/img/wave.svg'\r\nimport Cel from '../assets/img/pato.svg'\r\nimport { Correct_Alert } from '../helpers/helper_Swal_Alerts'\r\n\r\nconst Schema = Yup.object().shape({\r\n    email: Yup\r\n        .string('Ingresa tu correo')\r\n        .email('Ingresa un correo valido')\r\n        .required('Email es requerido')\r\n})\r\n\r\nconst EmailRecover = () => {\r\n    const history = useHistory()\r\n\r\n    const [messLogin, setMessLogin] = useState('')\r\n    const [carga, setCarga] = useState('Enviar Correo')\r\n\r\n    return (\r\n        <>\r\n            <img src={Ola} id=\"Ola\" alt=\"\" className=\"wave\" />\r\n            <div className=\"container-login\">\r\n                <div className=\"img-login\">\r\n                    <img src={Cel} id=\"Cel\" alt=\"\" />\r\n                </div>\r\n                <Grid item xs={12} sm={8} md={5} elevation={6}>\r\n                    <Box\r\n                        sx={{\r\n                            my: 8,\r\n                            mx: 4,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center'\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={Logo}\r\n                            style={{ height: '150px' }}\r\n                            alt=\"Logo\" />\r\n\r\n                        <h2\r\n                            style={{ color: '#00659D', textAlign: 'center' }}\r\n                        >\r\n                            Recuperación de contraseña\r\n                        </h2>\r\n                        <Formik\r\n                            initialValues={{\r\n                                email: ''\r\n                            }}\r\n\r\n                            validationSchema={Schema}\r\n\r\n                            onSubmit={async (values) => {\r\n                                setCarga('Enviando correo...')\r\n                                try {\r\n                                    const respuesta = await Axios({\r\n                                        method: 'post',\r\n                                        url: `${process.env.REACT_APP_API_URL}/accounts/recover`,\r\n                                        data: values\r\n                                    })\r\n                                    const { data } = respuesta\r\n                                    Correct_Alert(undefined, data.message)\r\n                                    //console.log('🚀 ~ file: EmailRecover.jsx ~ line 106 ~ onSubmit={ ~ data', data)\r\n                                    history.push('/dashboard')\r\n                                } catch (error) {\r\n                                    //console.log(error.response.data.message)\r\n                                    setMessLogin({ data: { message: error.response.data.message } })\r\n                                }\r\n                            }}\r\n                        >\r\n\r\n                            {\r\n                                ({\r\n                                    touched,\r\n                                    errors,\r\n                                    values,\r\n                                    handleSubmit,\r\n                                    handleChange\r\n                                }) => (\r\n                                    <Form onSubmit={handleSubmit} className=\"form-login\">\r\n                                        <Card>\r\n                                            <CardContent\r\n                                                style={{ textAlign: 'justify' }}\r\n                                            >\r\n                                                Ingresa el correo que registraste para recuperar o cambiar tu contraseña.\r\n                                                Si es correcto se enviara un correo con la informacion necesaria para hacer el cambio de la contraseña\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                        <TextField\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"email\"\r\n                                            label=\"Correo\"\r\n                                            name=\"email\"\r\n                                            autoComplete=\"email\"\r\n                                            autoFocus\r\n                                            value={values.email}\r\n                                            onChange={handleChange}\r\n                                            error={touched.email && Boolean(errors.email)}\r\n                                            helperText={touched.email && errors.email}\r\n                                        />\r\n                                        {messLogin?.data && (\r\n                                            <div className=\"input-feedback\">\r\n                                                {messLogin?.data?.message}\r\n                                            </div>\r\n                                        )}\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            sx={{ mt: 3, mb: 2 }}\r\n                                            className=\"btn-login btn-primary btn-block\"\r\n                                        >\r\n                                            {carga}\r\n                                        </button>\r\n                                    </Form>\r\n                                )\r\n                            }\r\n\r\n                        </Formik>\r\n                    </Box>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmailRecover\r\n"],"names":["colorTheme","window","Swal","Warning_Alert","title","htmlText","btnConfirmcolor","imageUrl","imgGanso","imageWidth","imageHeight","imageAlt","html","showCloseButton","showCancelButton","showConfirmButton","confirmButtonColor","confirmButtonText","focusConfirm","Correct_Alert","ErrorAlert","alt","ErrorAlertSiNo","cancelButtonText","SendAlert","SendOkAlert","SendBadAlert","RetroalimentacionAlert","gansoPensandoAlert","lupa_celular","ganso_lupa_celular","pensando","ganso_pensando","elegante","ganso_elegante","leyendo","ganso_leyendo","explicando","ganso_explicando","celular","ganso_celular","meditando","ganso_meditando","sorprendido","ganso_sorprendido","durmiendo","ganso_durmiendo","presentacion_personaje","ganso_presentacion_personaje","elegante_250x200","stop_250x200","ganso_stop_250x200","escribiendo_250x200","ganso_escribiendo_250x200","feliz_250x200","ganso_feliz_250x200","triste_250x200","ganso_triste_250x200","ganso_ejercicio","Schema","Yup","shape","email","required","history","useHistory","useState","messLogin","setMessLogin","carga","setCarga","src","Ola","id","className","Cel","item","xs","sm","md","elevation","sx","my","mx","display","flexDirection","alignItems","Logo","style","height","color","textAlign","initialValues","validationSchema","onSubmit","values","Axios","method","url","process","data","respuesta","undefined","message","push","response","touched","errors","handleSubmit","handleChange","margin","fullWidth","label","name","autoComplete","autoFocus","value","onChange","error","Boolean","helperText","type","variant","mt","mb"],"sourceRoot":""}