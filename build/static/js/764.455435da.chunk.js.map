{"version":3,"file":"static/js/764.455435da.chunk.js","mappings":"4UAiBMA,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,MAAOF,EAAAA,GACK,qBACPE,MAAM,4BACNC,SAAS,wBAsHlB,UAnHqB,WACjB,IAAMC,GAAUC,EAAAA,EAAAA,MAEhB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,iBAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEA,OACI,iCACI,gBAAKC,IAAKC,EAAAA,EAAKC,GAAG,MAAMC,IAAI,GAAGC,UAAU,UACzC,iBAAKA,UAAU,kBAAf,WACI,gBAAKA,UAAU,YAAf,UACI,gBAAKJ,IAAKK,EAAAA,EAAKH,GAAG,MAAMC,IAAI,QAEhC,SAAC,KAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,UAAW,EAA5C,UACI,UAAC,IAAD,CACIC,GAAI,CACAC,GAAI,EACJC,GAAI,EACJC,QAAS,OACTC,cAAe,SACfC,WAAY,UANpB,WASI,gBACIhB,IAAKiB,EAAAA,EACLC,MAAO,CAAEC,OAAQ,SACjBhB,IAAI,UAER,eACIe,MAAO,CAAEE,MAAO,UAAWC,UAAW,UAD1C,+CAKA,SAAC,KAAD,CACIC,cAAe,CACX/B,MAAO,IAGXgC,iBAAkBnC,EAElBoC,SAAQ,yCAAE,WAAOC,GAAP,qFACN1B,EAAS,sBADH,kBAGsB2B,IAAM,CAC1BC,OAAQ,OACRC,IAAI,GAAD,OAAKC,2CAAL,qBACHC,KAAML,IANR,OAGIM,EAHJ,OAQMD,EAASC,EAATD,MACRE,EAAAA,EAAAA,SAAcC,EAAWH,EAAKI,SAE9BzC,EAAQ0C,KAAK,cAXX,kDAcFtC,EAAa,CAAEiC,KAAM,CAAEI,QAAS,KAAME,SAASN,KAAKI,WAdlD,0DAAF,sDAPZ,SA2BQ,kBACIG,EADJ,EACIA,QACAC,EAFJ,EAEIA,OACAb,EAHJ,EAGIA,OACAc,EAJJ,EAIIA,aACAC,EALJ,EAKIA,aALJ,OAOI,UAAC,KAAD,CAAMhB,SAAUe,EAAcnC,UAAU,aAAxC,WACI,SAAC,IAAD,WACI,SAAC,IAAD,CACIc,MAAO,CAAEG,UAAW,WADxB,uMAOJ,SAAC,IAAD,CACIoB,OAAO,SACPjD,UAAQ,EACRkD,WAAS,EACTxC,GAAG,QACHyC,MAAM,SACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,MAAOtB,EAAOlC,MACdyD,SAAUR,EACVS,MAAOZ,EAAQ9C,OAAS2D,QAAQZ,EAAO/C,OACvC4D,WAAYd,EAAQ9C,OAAS+C,EAAO/C,SAE9B,OAATK,QAAS,IAATA,OAAA,EAAAA,EAAWkC,QACR,gBAAK1B,UAAU,iBAAf,gBACKR,QADL,IACKA,GADL,UACKA,EAAWkC,YADhB,aACK,EAAiBI,WAG1B,mBACIkB,KAAK,SACLC,QAAQ,YACR1C,GAAI,CAAE2C,GAAI,EAAGC,GAAI,GACjBnD,UAAU,kCAJd,SAMKN,MAzCb,cAqD/B,C","sources":["pages/EmailRecover.jsx"],"sourcesContent":["/* eslint-disable camelcase */\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Axios from 'axios'\r\nimport { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport '../assets/css/Login.scss'\r\nimport TextField from '@mui/material/TextField'\r\nimport Card from '@mui/material/Card'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport Logo from '../assets/img/logo9.svg'\r\nimport Ola from '../assets/img/wave.svg'\r\nimport Cel from '../assets/img/pato.svg'\r\nimport { Correct_Alert } from '../helpers/helper_Swal_Alerts'\r\n\r\nconst Schema = Yup.object().shape({\r\n    email: Yup\r\n        .string('Ingresa tu correo')\r\n        .email('Ingresa un correo valido')\r\n        .required('Email es requerido')\r\n})\r\n\r\nconst EmailRecover = () => {\r\n    const history = useHistory()\r\n\r\n    const [messLogin, setMessLogin] = useState('')\r\n    const [carga, setCarga] = useState('Enviar Correo')\r\n\r\n    return (\r\n        <>\r\n            <img src={Ola} id=\"Ola\" alt=\"\" className=\"wave\" />\r\n            <div className=\"container-login\">\r\n                <div className=\"img-login\">\r\n                    <img src={Cel} id=\"Cel\" alt=\"\" />\r\n                </div>\r\n                <Grid item xs={12} sm={8} md={5} elevation={6}>\r\n                    <Box\r\n                        sx={{\r\n                            my: 8,\r\n                            mx: 4,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center'\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={Logo}\r\n                            style={{ height: '150px' }}\r\n                            alt=\"Logo\" />\r\n\r\n                        <h2\r\n                            style={{ color: '#00659D', textAlign: 'center' }}\r\n                        >\r\n                            Recuperación de contraseña\r\n                        </h2>\r\n                        <Formik\r\n                            initialValues={{\r\n                                email: ''\r\n                            }}\r\n\r\n                            validationSchema={Schema}\r\n\r\n                            onSubmit={async (values) => {\r\n                                setCarga('Enviando correo...')\r\n                                try {\r\n                                    const respuesta = await Axios({\r\n                                        method: 'post',\r\n                                        url: `${process.env.REACT_APP_API_URL}/accounts/recover`,\r\n                                        data: values\r\n                                    })\r\n                                    const { data } = respuesta\r\n                                    Correct_Alert(undefined, data.message)\r\n                                    //console.log('🚀 ~ file: EmailRecover.jsx ~ line 106 ~ onSubmit={ ~ data', data)\r\n                                    history.push('/dashboard')\r\n                                } catch (error) {\r\n                                    //console.log(error.response.data.message)\r\n                                    setMessLogin({ data: { message: error.response.data.message } })\r\n                                }\r\n                            }}\r\n                        >\r\n\r\n                            {\r\n                                ({\r\n                                    touched,\r\n                                    errors,\r\n                                    values,\r\n                                    handleSubmit,\r\n                                    handleChange\r\n                                }) => (\r\n                                    <Form onSubmit={handleSubmit} className=\"form-login\">\r\n                                        <Card>\r\n                                            <CardContent\r\n                                                style={{ textAlign: 'justify' }}\r\n                                            >\r\n                                                Ingresa el correo que registraste para recuperar o cambiar tu contraseña.\r\n                                                Si es correcto se enviara un correo con la informacion necesaria para hacer el cambio de la contraseña\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                        <TextField\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"email\"\r\n                                            label=\"Correo\"\r\n                                            name=\"email\"\r\n                                            autoComplete=\"email\"\r\n                                            autoFocus\r\n                                            value={values.email}\r\n                                            onChange={handleChange}\r\n                                            error={touched.email && Boolean(errors.email)}\r\n                                            helperText={touched.email && errors.email}\r\n                                        />\r\n                                        {messLogin?.data && (\r\n                                            <div className=\"input-feedback\">\r\n                                                {messLogin?.data?.message}\r\n                                            </div>\r\n                                        )}\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            sx={{ mt: 3, mb: 2 }}\r\n                                            className=\"btn-login btn-primary btn-block\"\r\n                                        >\r\n                                            {carga}\r\n                                        </button>\r\n                                    </Form>\r\n                                )\r\n                            }\r\n\r\n                        </Formik>\r\n                    </Box>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmailRecover\r\n"],"names":["Schema","Yup","shape","email","required","history","useHistory","useState","messLogin","setMessLogin","carga","setCarga","src","Ola","id","alt","className","Cel","item","xs","sm","md","elevation","sx","my","mx","display","flexDirection","alignItems","Logo","style","height","color","textAlign","initialValues","validationSchema","onSubmit","values","Axios","method","url","process","data","respuesta","Correct_Alert","undefined","message","push","response","touched","errors","handleSubmit","handleChange","margin","fullWidth","label","name","autoComplete","autoFocus","value","onChange","error","Boolean","helperText","type","variant","mt","mb"],"sourceRoot":""}